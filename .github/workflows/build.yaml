name: Build openLens

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    timeout-minutes: 360
    env:
      BUILD_ID: ${{ github.run_number }}
    steps:
      - name: Checkout lens repo
        uses: actions/checkout@v3.2.0
      - name: Export version to variable
        run:  echo "LENS_VERSION=$(cat version)" >> $GITHUB_ENV
        shell: bash
        
        
      - uses: actions/setup-node@v3
        with:
          node-version: 16.16.0
      
      - name: Checkout Upstream Lens
        uses: actions/checkout@v3
        with:
          repository: lensapp/lens
          path: lens
          ref: v${{ env.LENS_VERSION }}
          fetch-depth: 1

      - name: Patch Upstream Lens
        run: node update.js
      
      - name: Build Lens
        run: |
           npm run all:install
           mkdir -p openlens/node_modules
           if [ "$RUNNER_OS" == "Windows" ]; then
            npx nx run open-lens:build:app --win nsis msi portable
           fi
           rm -f open-lens/dist/*blockmap{,*}
        shell: bash
        working-directory: lens
        
      - name: Calculate SHA256 checksum
        run: |
           if command -v shasum 2>/dev/null 1>&2; then
            for filename in OpenLens*; do shasum -a 256 "${filename}" | tee "${filename}.sha256" ; done
          else
            for filename in OpenLens*; do certutil -hashfile "${filename}" SHA256 | tee "${filename}.sha256" ; done
           fi
        shell: bash
        working-directory: lens/open-lens/dist

      - uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/main'
        with:
          name: OpenLens-${{ matrix.os }}
          retention-days: 5
          path: |
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}-${{ env.BUILD_ID }}.exe
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}-${{ env.BUILD_ID }}*.sha256
      - name: Generate Changelog
        run: curl -s https://api.github.com/repos/lensapp/lens/releases/latest | jq -r 'select(.prerelease == false) | .body[0:]' > ${{ github.workspace }}-CHANGELOG.txt
      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: v${{ env.LENS_VERSION }}-${{ env.BUILD_ID }}
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: | 
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}-${{ env.BUILD_ID }}.exe
            lens/open-lens/dist/OpenLens-${{ env.LENS_VERSION }}-${{ env.BUILD_ID }}*.sha256
      - name: Latest
        uses: softprops/action-gh-release@v0.1.15
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: Latest
          files: | 
           lens/open-lens/dist/OpenLens.Setup.${{ env.LENS_VERSION }}-${{ env.BUILD_ID }}.exe
           lens/open-lens/dist/lates*.yml
